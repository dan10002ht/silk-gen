version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thuyen-silk-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=thuyen_silk
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CRON_STANDALONE=false
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - thuyen-network

  cron:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thuyen-silk-cron
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - CRON_STANDALONE=true
    depends_on:
      - redis
    command: yarn cron
    restart: unless-stopped
    networks:
      - thuyen-network

  redis:
    image: redis:7-alpine
    container_name: thuyen-silk-redis
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - thuyen-network

  postgres:
    image: postgres:14-alpine
    container_name: thuyen-silk-postgres
    environment:
      - POSTGRES_DB=thuyen_silk
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - thuyen-network

volumes:
  redis-data:
  postgres-data:

networks:
  thuyen-network:
    driver: bridge 